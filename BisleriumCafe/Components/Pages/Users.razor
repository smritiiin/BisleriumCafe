@page "/users"

@if (_showAddUserDialog)
{
    <div class="modal-overlay">
        <div class="modal-container">
            <div class="modal-header">
                <h4 class="modal-title">@_dialogTitle</h4>
            </div>
            <div class="modal-body">
                <form>
                    <div class="form-group">
                        <label for="username">Username</label>
                        <input type="text" class="form-control" id="username" @bind="_username" placeholder="Username" />
                    </div>
                    <div class="form-group">
                        <label for="password">Password</label>
                        <input type="password" class="form-control" id="password" @bind="_password" placeholder="Password" />
                    </div>
                    <div class="form-group">
                        <label for="role">Role</label>
                        <div class="form-check">
                            <input id="userRole" type="radio" class="form-check-input" name="role" value=@Role.User checked="@(_role == Role.User)" @onchange="RoleChangeHandler" />
                            <label class="form-check-label" for="userRole">User</label>
                        </div>
                        <div class="form-check">
                            <input id="adminRole" type="radio" class="form-check-input" name="role" value=@Role.Admin checked="@(_role == Role.Admin)" @onchange="RoleChangeHandler" />
                            <label class="form-check-label" for="adminRole">Admin</label>
                        </div>
                    </div>
                    @if (!string.IsNullOrEmpty(_addUserErrorMessage))
                    {
                        <div class="alert alert-danger" role="alert">
                            @_addUserErrorMessage
                        </div>
                    }
                </form>
            </div>
            <div class="modal-footer">
                <button class="btn btn-secondary" @onclick="() => CloseAddUserDialog(true)">Close</button>
                <button class="btn btn-primary" @onclick="() => CloseAddUserDialog(false)">Add</button>
            </div>
        </div>
    </div>
}


<nav class="navbar navbar-light bg-light justify-content-between">
    <h1 class="navbar-brand mb-0 h1">Users</h1>
    <button class="btn btn-primary" type="button" @onclick="OpenAddUserDialog">
        <span class="oi oi-plus" /> Add User
    </button>
</nav>

<table class="table">
    <thead>
        <tr>
            <th>Username</th>
            <th>Role</th>
            <th>Created At</th>
            <th>CreatedBy</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var user in _users)
        {
            <tr>
                <td>@user.Username</td>
                <td>@user.Role.ToString()</td>
                <td>@user.CreatedAt.ToString("MMM dd, yyyy h:mm tt")</td>
                <td>
                    @{
                        var creator = UsersService.GetById(user.CreatedBy);
                        <span>@(creator == null ? "Unknown" : creator.Username)</span>
                    }
                </td>
                <td>
                </td>
            </tr>
        }
    </tbody>
</table>

@code {
    [CascadingParameter]
    private GlobalState ?_globalState { get; set; }
    private List<User> ?_users { get; set; }
    private Role _role { get; set; }

    private bool _showAddUserDialog;
    private string _dialogTitle;
    private string _addUserErrorMessage;
    private string _username;
    private string _password;

    protected override void OnInitialized()
    {
        _users = UsersService.GetAll();
    }

    private void OpenAddUserDialog()
    {
        _showAddUserDialog = true;
        _dialogTitle = "Add User";
        _username = "";
        _password = "";
        _role = Role.User;
        _addUserErrorMessage = "";
    }

    private void CloseAddUserDialog(bool isCancel)
    {
        if (isCancel)
        {
            _showAddUserDialog = false;
        }
        else
        {
            try
            {
                // Perform user creation logic
                _addUserErrorMessage = "";
                _users = UsersService.Create(_globalState.CurrentUser.Id, _username, _password, _role);
                _showAddUserDialog = false;

            }
            catch (Exception e)
            {
                _addUserErrorMessage = e.Message;
            }
        }
    }

    private void RoleChangeHandler(ChangeEventArgs e)
    {
        _role = (Role)Enum.Parse(typeof(Role), e.Value.ToString());
    }
}